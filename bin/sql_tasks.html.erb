<div class="transparent_sql">
	<h5>Given tables:</h5>
	<ul class="db_tables">
		<li>★ tasks (id, name, status, project_id, rating, deadline)</li>
		<li>★ projects (id, name, user_id)</li>
	</ul>
	<h5>Write the queries for:</h5>
	<ul class="list_of_sql_tasks">
		<li>get all statuses, not repaeting, alphabeticaly ordered
			<ul>
				<li> SELECT DISTINCT status FROM tasks ORDER BY status ASC</li>
				<!-- <li> Task.select(:status).uniq.order(status: :asc)</li> -->
			</ul>
		</li>
		<li>get the count of all tasks in each project, order by tasks count descending
			<ul> 
				<li>SELECT project_id, COUNT(*) AS count_all
					FROM tasks
					GROUP BY project_id
					ORDER BY count_all DESC</li>
			</ul>
		</li>
		<li>get the count of all tasks in each project, order by projects names
			<ul>
				<li>SELECT COUNT(tasks.id) AS amoun_of_tasks, projects.name AS project_name
					FROM projects LEFT JOIN tasks
					ON tasks.project_id = projects.id
					GROUP BY project_id
					ORDER BY projects.name
				</li>
			</ul>
		</li>
		<li>get the tasks for all projects having the name beginning with “N” letter
			<ul>
				<li>SELECT tasks.name AS task_name, projects.name AS project_name
					FROM projects LEFT JOIN tasks
					ON projects.id = tasks.project_id
					WHERE tasks.name LIKE "N%"
				</li>
			</ul>
		</li>
		<li>get the list of all projects containing the ‘a’ letter in the middle of the name, and show the tasks count near each project. Mention that there can exist projects without tasks and tasks with project_id=NULL
			<ul>
				<li>SELECT projects.name AS project_name, COUNT(tasks.id) AS amount_of_tasks
					FROM projects LEFT JOIN tasks
					ON projects.id = tasks.project_id
					WHERE projects.name LIKE "%a%"
					GROUP BY tasks.project_id
				</li>
			</ul>
		</li>
		<li>get the list of tasks with duplicate names. Order alphabetically
			<ul>
				<li>SELECT COUNT(name) AS amount_of_duplicated_name, name
					FROM tasks
					GROUP BY name
					HAVING amount_of_duplicated_name > 1
					ORDER BY name ASC
				</li>
			</ul>
		</li>
		<li>get the list of tasks having several exact matches of both name and status, from the project ‘Garage’. Order by matches count
			<ul>
				<li>SELECT tasks.name, COUNT(tasks.name) AS amount_of_tasks
					FROM projects INNER JOIN tasks
					ON projects.id = tasks.project_id
					WHERE projects.name = 'Garage'
					GROUP BY tasks.name, tasks.status
					HAVING amount_of_tasks > 1
				</li>
			</ul>
		</li>
		<li>get the list of project names having more than 10 tasks in status ‘completed’. Order by project_id
			<ul>
				<li>SELECT projects.name, COUNT(tasks.id) AS amount_of_tasks
					FROM projects INNER JOIN tasks
					ON projects.id = tasks.project_id
					WHERE tasks.status = 't'
					GROUP BY tasks.project_id
					HAVING amount_of_tasks > 10
					ORDER BY tasks.project_id ASC
 				</li>
			</ul>
		</li>

	</ul>
</div>
